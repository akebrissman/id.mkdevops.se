---

- name: start postgres
  docker_container:
    name: postgres
    image: postgres:9.4-alpine
    state: started
    volume_driver: local
    volumes:
      - postgres:/var/lib/postgresql/data
    ports:
      - 5432:5432
    env:
      POSTGRES_DB: prod
      POSTGRES_USER: xl_auth
      POSTGRES_PASSWORD: xl_auth
  tags: xl_auth

- name: start xl_auth
  docker_container:
    name: xl_auth
    image: "{{ xl_auth_docker }}"
    pull: yes
    command: run -h 0.0.0.0 -p 5000 --with-threads
    state: started
    links:
      - postgres
    ports:
      - 80:5000
    env:
      FLASK_DEBUG: 0
      SQLALCHEMY_DATABASE_URI: postgresql://xl_auth:xl_auth@postgres/prod
  tags: xl_auth
  register: start_xl_auth

- name: run 'flask db upgrade'
  docker_container:
    name: xl_auth_db_upgrade
    image: "{{ xl_auth_docker }}"
    interactive: yes
    tty: yes
    detach: no
    command: db upgrade
    links:
      - postgres
    env:
      FLASK_DEBUG: 0
      SQLALCHEMY_DATABASE_URI: postgresql://xl_auth:xl_auth@postgres/prod
  when: start_xl_auth.changed
  tags: xl_auth

- name: run 'flask create_user -e libris@kb.se -p <something-secret> --is-admin --force'
  docker_container:
    name: xl_auth_create_user
    image: "{{ xl_auth_docker }}"
    interactive: yes
    tty: yes
    detach: no
    command: "create_user -e libris@kb.se -n SuperAdmin -p {{ xl_auth_admin_pass }} --is-admin -f"
    links:
      - postgres
    env:
      FLASK_DEBUG: 0
      SQLALCHEMY_DATABASE_URI: postgresql://xl_auth:xl_auth@postgres/prod
  when: xl_auth_admin_pass | length
  tags: xl_auth

- name: run 'flask import_data'
  docker_container:
    name: xl_auth_import_data
    image: "{{ xl_auth_docker }}"
    interactive: yes
    tty: yes
    auto_remove: yes
    command: import_data --verbose --admin-email libris@kb.se
    links:
      - postgres
    env:
      FLASK_DEBUG: 0
      SQLALCHEMY_DATABASE_URI: postgresql://xl_auth:xl_auth@postgres/prod
  when: start_xl_auth.changed
  tags: xl_auth

...
